plugins {
	id "java"
	id "org.springframework.boot" version "2.7.9"
	id "io.spring.dependency-management" version "1.1.0"
}

group = "seung"
version = "1.0.0"

[compileJava, compileTestJava, javadoc]*.options*.encoding = "UTF-8"

java {
	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8
}
ext['log4j2.version'] = '2.17.2'

springBoot {
	buildInfo()
}

repositories {
	mavenCentral()
	maven { url "https://jitpack.io" }
}

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencies {

	// test
	testImplementation("junit:junit:4.12")
	testImplementation("org.springframework.boot:spring-boot-starter-test") {
		exclude group: "org.junit.vintage", module: "junit-vintage-engine"
	}
	testImplementation "org.mybatis.spring.boot:mybatis-spring-boot-starter-test:2.1.3"
	testImplementation "org.springframework.security:spring-security-test"
	
	// lombok
	compileOnly("org.projectlombok:lombok")
	annotationProcessor("org.projectlombok:lombok")
	
	// spring
	implementation("org.springframework.boot:spring-boot-starter-web")
	implementation("org.springframework.boot:spring-boot-starter-validation")
	implementation("org.springframework.boot:spring-boot-starter-security")
	//implementation("org.springframework.boot:spring-boot-starter-aop")
	implementation("org.springframework.boot:spring-boot-starter-actuator")
	implementation("org.springframework.boot:spring-boot-starter-oauth2-client")
	implementation("org.springframework.boot:spring-boot-starter-mail")
	//implementation("org.springframework.boot:spring-boot-starter-quartz")
	//implementation("org.springframework.boot:spring-boot-starter-amqp")
	compileOnly("org.springframework.boot:spring-boot-devtools")
	
	// database
	implementation("org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.2")
	//implementation("org.springframework.boot:spring-boot-starter-data-jpa")
	runtimeOnly("org.postgresql:postgresql")
	runtimeOnly("com.microsoft.sqlserver:mssql-jdbc")
	//runtimeOnly("com.oracle.ojdbc:ojdbc8")
	//runtimeOnly("mysql:mysql-connector-java")
	
	// seung
	/*
	implementation(project(path: ":seung-util-kimchi", configuration: "default")) {
		exclude module: "slf4j-simple"
	}
	*/
	implementation("com.github.seung-dev:seung-util-kimchi:23.07.28.04") {
		exclude module: "slf4j-simple"
	}
	
	// jwt
	implementation("io.jsonwebtoken:jjwt-api:0.11.5")
	runtimeOnly("io.jsonwebtoken:jjwt-impl:0.11.5")
	runtimeOnly("io.jsonwebtoken:jjwt-jackson:0.11.5")
	
	// s3
	implementation platform('com.amazonaws:aws-java-sdk-bom:1.11.968')
	implementation 'com.amazonaws:aws-java-sdk-s3'
	
	// lib
	implementation fileTree(dir: "libs", include: "*.jar")
	
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

tasks.withType(Jar) {
	destinationDir = file("../../build/java")
	//archiveFileName = "${archiveBaseName.get()}.${archiveExtension.get()}"
}
